{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    };\n    const response = await fetch('/api/user/', config);\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('user', JSON.stringify(json));\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignup, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","username","password","config","method","headers","body","JSON","stringify","response","fetch","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/amaln/Desktop/AMAL/code/locofy_project/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const signup = async (username, password) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        const config = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({username, password})\r\n        };\r\n        const response = await fetch('/api/user/', config);\r\n        const json = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false);\r\n            setError(json.error);\r\n        }\r\n        if (response.ok) {\r\n            localStorage.setItem('user', JSON.stringify(json));\r\n            dispatch({type: 'LOGIN', payload: json});\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n\r\n    return {signup, isLoading, error};\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,MAAM,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACzCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,MAAM,GAAG;MACXC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,QAAQ;QAAEC;MAAQ,CAAC;IAC7C,CAAC;IACD,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAEP,MAAM,CAAC;IAClD,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;IAElC,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;MACdd,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;IACxB;IACA,IAAIc,QAAQ,CAACG,EAAE,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACG,IAAI,CAAC,CAAC;MAClDZ,QAAQ,CAAC;QAACgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MACxCb,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAACE,MAAM;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACrC,CAAC;AAAA,GA7BYD,SAAS;EAAA,QAGGD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}